[tool.pinto]
# note: until pinto update gets in, any steps
# that have subcommands will fail (e.g. training and sampling)
steps = [
    #"data_generation:generate-background",
    #"data_generation:generate-waveforms",
    #"data_generation:generate-flow-injections",
    #"data_generation:generate-bilby-injections",
    #"analyze_with_bilby:analyze-with-bilby",
    #"train:train:maf:resnet",
    "sampling:sample-with-flow:maf:resnet",
    #"sampling:sample-and-compare-with-bilby:maf:resnet"
]

[tool.typeo.base]
basedir = "${BASE_DIR}"
datadir = "${DATA_DIR}"
logdir = "${BASE_DIR}/log"
sample_rate = 2048
ifos = ['H1', 'L1']
# note: due to how ml4gw returns extrinsic parameters, the ordering of dec, psi, phi is important,
# and these parameters should be at the end. We should find a way to make this more robust.
inference_params = ["frequency", "quality", "hrss", "phase", "dec", "psi", "phi"]
trigger_distance = 0.0
start = 1262044818
stop = 1262088018
test_stop = 1262100018
channel = "DCS-CALIB_STRAIN_CLEAN_C01"
frame_type = "HOFT_C01"
prior = "mlpe.injection.priors.sg_uniform"
state_flag = "DCS-ANALYSIS_READY_C01:1"
repository_directory = "${BASE_DIR}/model_repo/" 
force_generation = false
kernel_length = 2
highpass = 32
fduration = 1
waveform_duration = 8
bilby_duration = 4

# training parameters
batches_per_epoch = 200
max_epochs = 300

# flow subcommands
coupling = {num_transforms = 20, num_blocks = 4}
maf = {hidden_features = 100, num_transforms = 20, num_blocks = 5}

# embedding subcommands
dense = {context_dim = 64, hidden_layer_size = 128, num_hidden_layers = 2}
coherent = {context_dim = 64, hidden_layer_size = 128, num_hidden_layers = 2}
resnet = {context_dim = 128, layers = [2,  2], norm_groups = 8}

[tool.typeo.scripts.generate-background]
datadir = "${base.datadir}"
logdir = "${base.logdir}"
channel = "${base.channel}"
frame_type = "${base.frame_type}"
state_flag = "${base.state_flag}"
start = "${base.start}"
stop = "${base.stop}" 
ifos = "${base.ifos}"
sample_rate = "${base.sample_rate}" 
minimum_length = 10000
force_generation = "${base.force_generation}"
df = 0.125
gaussian = true

[tool.typeo.scripts.generate-waveforms]
datadir = "${base.datadir}"
logdir = "${base.logdir}"
n_samples = 25000
sample_rate = "${base.sample_rate}" 
force_generation = "${base.force_generation}"
waveform_duration = "${base.waveform_duration}"
prior = "${base.prior}"

[tool.typeo.scripts.train]
background_path = "${base.datadir}/background.h5" 
waveform_dataset = "${base.datadir}/validation_signals.h5"

logdir = "${base.logdir}"
outdir = "${base.basedir}/training"
testing_set = "${base.datadir}/flow_injections.h5"

inference_params = "${base.inference_params}"

ifos = "${base.ifos}"
sample_rate = "${base.sample_rate}"
kernel_length = "${base.kernel_length}"
fduration = "${base.fduration}"
highpass = 32 

batch_size = 1200
batches_per_epoch = "${base.batches_per_epoch}"
max_epochs = "${base.max_epochs}"
early_stop = 50

device = "cuda"
num_samples_draw = 10000
num_plot_corner = 20
valid_frac = 0.25
valid_stride = 0.0625
# init_weights = "${base.basedir}/training/weights.pt"
# flow subcommand
[tool.typeo.scripts.train.flow]
coupling = "${base.coupling}"
maf = "${base.maf}"

# embedding subcommand
[tool.typeo.scripts.train.embedding]
dense = "${base.dense}"
coherent = "${base.coherent}"
resnet = "${base.resnet}"

# scheduler subcommand
[tool.typeo.scripts.train.optimizer]
adam = {lr = 1e-3, weight_decay = 1e-7}

# optimizer subcommand
[tool.typeo.scripts.train.scheduler]
onecycle = {max_lr = 1e-3, epochs = "${base.max_epochs}", lr_ramp_epochs = 80, steps_per_epoch = "${base.batches_per_epoch}" }
cosine = {T_max = 10000, eta_min = 1e-5}
sequential = {schedulers = ['ConstantLR', 'CosineAnnealingLR', 'StepLR'], scheduler_kwargs = ["dict(total_iters=2,factor=1.0)", "dict(T_max=10,eta_min=1e-5)", "dict(gamma=0.5,step_size=5)"], milestones = [2, 250]}
plateau = {factor = 0.9, patience = 30, cooldown = 10, min_lr = 1e-8}
step = {step_size = 4500, gamma = 0.6}

[tool.typeo.scripts.generate-flow-injections]
ifos = "${base.ifos}"
state_flag = "${base.state_flag}"
frame_type = "${base.frame_type}"
channel = "${base.channel}"
start = "${base.stop}"
stop = "${base.test_stop}" 
sample_rate = "${base.sample_rate}"
prior = "${base.prior}"
n_samples = 1000
kernel_length = "${base.kernel_length}"
waveform_duration = "${base.waveform_duration}"
datadir = "${base.datadir}"
logdir = "${base.logdir}"
gaussian = false

[tool.typeo.scripts.generate-bilby-injections]
bilby_duration = "${base.bilby_duration}"
ifos = "${base.ifos}"
kernel_length = "${base.kernel_length}"
state_flag = "${base.state_flag}"
frame_type = "${base.frame_type}"
channel = "${base.channel}"
start = "${base.stop}"
stop = "${base.test_stop}"
sample_rate = "${base.sample_rate}"
prior = "mlpe.injection.priors.sg_uniform"
n_samples = 10
waveform_duration = "${base.waveform_duration}"
spacing = 100
buffer = 10
datadir = "${base.datadir}"
logdir = "${base.logdir}"
gaussian = false

[tool.typeo.scripts.analyze-with-bilby]
request_cpus = 24
n_live = 256
n_act = 5
ifos = "${base.ifos}"
bilby_duration = "${base.bilby_duration}"
waveform = "mlpe.injection.bilby_frequency_domain_sine_gaussian"
datadir = "${base.datadir}"
logdir = "${base.logdir}"
accounting_group = "${LIGO_ACCOUNTING_GROUP}"
channel = "${base.channel}"
sample_rate = "${base.sample_rate}"
prior = "${base.prior}"
force_generation = false

[tool.typeo.scripts.sample-with-flow]
ifos = "${base.ifos}"
kernel_length = "${base.kernel_length}"
sample_rate = "${base.sample_rate}"
fduration = "${base.fduration}"
model_state_path = "${base.basedir}/training/weights.pt"
inference_params = "${base.inference_params}"
basedir = "${base.basedir}"
testing_set = "${base.datadir}/flow_injections.h5"
num_samples_draw = 10000
num_plot_corner = 20
device = "cuda"

# flow subcommand
[tool.typeo.scripts.sample-with-flow.flow]
maf = "${base.maf}"
coupling = "${base.coupling}"

# embedding subcommand
[tool.typeo.scripts.sample-with-flow.embedding]
dense = "${base.dense}"
coherent = "${base.coherent}"
resnet = "${base.resnet}"


[tool.typeo.scripts.sample-and-compare-with-bilby]
ifos = "${base.ifos}"
kernel_length = "${base.kernel_length}"
sample_rate = "${base.sample_rate}"
fduration = "${base.fduration}"
model_state_path = "${base.basedir}/training/weights.pt"
inference_params = "${base.inference_params}"
basedir = "${base.basedir}"
testing_set = "${base.datadir}/bilby/bilby_injections.hdf5"
bilby_result_dir = "${base.datadir}/bilby/rundir-more-live/final_result"
num_samples_draw = 10000
device = "cuda"

# flow subcommand
[tool.typeo.scripts.sample-and-compare-with-bilby.flow]
maf = "${base.maf}"
coupling = "${base.coupling}"

# embedding subcommand
[tool.typeo.scripts.sample-and-compare-with-bilby.embedding]
dense = "${base.dense}"
coherent = "${base.coherent}"
resnet = "${base.resnet}"

